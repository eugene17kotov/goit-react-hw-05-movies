{"version":3,"file":"static/js/541.c67f3d50.chunk.js","mappings":"yOAwDA,UAjDa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAkBN,GAD3C,OACQO,EADR,OAGEH,EAAQG,EAASJ,MAHnB,4CADc,uBAAC,WAAD,wBAOdK,EACD,GAAE,CAACR,KAGF,8BACGG,EAAKM,OAAS,GACb,SAAC,IAAD,CACEC,GAAG,KACHC,QAAQ,OACRC,oBAAoB,iBACpBC,QAAQ,OAJV,SAMGV,EAAKW,MAAM,EAAG,IAAIC,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACrB,UAAC,IAAD,CAAKR,GAAG,KAAcS,MAAM,QAA5B,WACE,SAAC,IAAD,CACET,GAAG,MACHU,GAAG,OACHC,aAAa,OACbC,IACEN,EACI,kCAAoCA,EACpC,uDAENO,IAAKN,EACLE,MAAM,SAER,uBAAIF,KACJ,uCAAeC,OAdClB,EADG,OAoBzB,oCAIP,C,4MCpDDwB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAgB,mCAAG,oGACPF,IAAM,sBAAuB,CAClDG,OAAQ,CACNC,QAASH,KAHiB,cACxBI,EADwB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,qDAUhBC,EAAoB,mCAAG,WAAMC,GAAN,uFACXT,IAAM,gBAAiB,CAC5CG,OAAQ,CACNC,QAASH,EACTS,eAAe,EACfD,MAAAA,KAL8B,cAC5BJ,EAD4B,yBAS3BA,EAASC,KAAKC,SATa,2CAAH,sDAYpBI,EAAoB,mCAAG,WAAMC,GAAN,uFACXZ,IAAM,UAAD,OAAWY,GAAW,CAChDT,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,sDAUpBxB,EAAiB,mCAAG,WAAM8B,GAAN,uFACRZ,IAAM,UAAD,OAAWY,EAAX,YAA8B,CACxDT,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBO,EAAoB,mCAAG,WAAMD,GAAN,uFACXZ,IAAM,UAAD,OAAWY,EAAX,YAA8B,CACxDT,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,qD","sources":["components/Cast/Cast.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Box } from 'utils/Box';\n\nimport { getFetchMovieCast } from 'services/api';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieCast() {\n      const castData = await getFetchMovieCast(id);\n\n      setCast(castData.cast);\n    }\n\n    fetchMovieCast();\n  }, [id]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <Box\n          as=\"ul\"\n          display=\"grid\"\n          gridTemplateColumns=\"repeat(5, 1fr)\"\n          gridGap=\"10px\"\n        >\n          {cast.slice(0, 20).map(({ id, profile_path, name, character }) => (\n            <Box as=\"li\" key={id} width=\"200px\">\n              <Box\n                as=\"img\"\n                mb=\"10px\"\n                borderRadius=\"10px\"\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : 'https://dummyimage.com/200x300/000/fff&text=No+photo'\n                }\n                alt={name}\n                width=\"200\"\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </Box>\n          ))}\n        </Box>\n      ) : (\n        <p>No cast</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '6f3a72a470b06bab99f8d69f54b4e2d3';\n\nexport const getFetchTrending = async () => {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchSearchMovies = async query => {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchMovieDetails = async movieId => {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieCast = async movieId => {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieReviews = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n"],"names":["id","useParams","useState","cast","setCast","useEffect","getFetchMovieCast","castData","fetchMovieCast","length","as","display","gridTemplateColumns","gridGap","slice","map","profile_path","name","character","width","mb","borderRadius","src","alt","axios","KEY","getFetchTrending","params","api_key","response","data","results","getFetchSearchMovies","query","include_adult","getFetchMovieDetails","movieId","getFetchMovieReviews"],"sourceRoot":""}