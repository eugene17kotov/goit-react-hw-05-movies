{"version":3,"file":"static/js/914.397e719d.chunk.js","mappings":"qOAGaA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gXAiBfE,EAAcF,EAAAA,GAAAA,IAAH,2EAKXG,EAAeH,EAAAA,GAAAA,IAAH,6DAKZI,EAAiBJ,EAAAA,GAAAA,IAAH,4FAOdK,EAASL,EAAAA,GAAAA,KAAH,0GAEG,YAAiB,IAAdM,EAAa,EAAbA,OACrB,OAAIA,EAAS,EACJ,OAELA,GAAU,GAAKA,GAAU,EACpB,OAEF,MACR,IAEQ,gBAAGA,EAAH,EAAGA,OAAH,OAAiBA,GAAU,GAAKA,GAAU,EAAI,QAAU,OAAxD,I,SCrCEC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACC,EAAA,EAAD,CACEC,GAAG,KACHC,QAAQ,OACRC,oBAAoB,iBACpBC,QAAQ,OACRC,aAAa,OALf,SAOGR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,aAAtB,OACV,yBACE,UAACtB,EAAD,CAAiBuB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMf,GAArD,WACE,SAACN,EAAD,WACE,SAACD,EAAD,CAAauB,IAAKL,EAAQM,IAAKP,OAEjC,UAACf,EAAD,YACE,wBACE,uBAAIe,OAEN,0BACE,qCACA,SAACd,EAAD,CAAQC,OAAQe,EAAaM,QAAQ,GAArC,SACGN,EAAaM,QAAQ,eAZvBT,EADC,OAuBnB,C,iKC7CYU,E,QAAc5B,GAAAA,GAAH,6L,SCiCxB,EA3BiB,WACf,OAA4B6B,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,uGACQC,EAAAA,EAAAA,MADR,OACdC,EADc,OAEdC,EAAqBD,EAAcjB,KACvC,kBAAuD,CACrDC,GADF,EAAGA,GAEDC,MAFF,EAAOA,MAGLC,OAAQ,kCAHV,EAAcgB,YAIZf,aAJF,EAAmCA,aAAnC,IAOFS,EAAUK,GAVU,2CAAH,qDAYnBH,GACD,GAAE,KAGD,UAACrB,EAAA,EAAD,CAAK0B,EAAE,SAAP,WACE,SAACT,EAAD,6BAECpB,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C,4MC/BD8B,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECN,EAAgB,mCAAG,oGACPK,IAAM,sBAAuB,CAClDE,OAAQ,CACNC,QAASF,KAHiB,cACxBG,EADwB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,qDAUhBC,EAAoB,mCAAG,WAAMC,GAAN,uFACXR,IAAM,gBAAiB,CAC5CE,OAAQ,CACNC,QAASF,EACTQ,eAAe,EACfD,MAAAA,KAL8B,cAC5BJ,EAD4B,yBAS3BA,EAASC,KAAKC,SATa,2CAAH,sDAYpBI,EAAoB,mCAAG,WAAMC,GAAN,uFACXX,IAAM,UAAD,OAAWW,GAAW,CAChDT,OAAQ,CACNC,QAASF,KAHqB,cAC5BG,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,sDAUpBO,EAAiB,mCAAG,WAAMD,GAAN,uFACRX,IAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDT,OAAQ,CACNC,QAASF,KAHkB,cACzBG,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBQ,EAAoB,mCAAG,WAAMF,GAAN,uFACXX,IAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDT,OAAQ,CACNC,QAASF,KAHqB,cAC5BG,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.js","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieCard = styled(Link)`\n  display: block;\n  text-decoration: none;\n  height: 100%;\n  border: 1px solid blue;\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #282c34;\n  color: #b2b3f6;\n  box-shadow: 5px 5px 5px #282c34;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 10px 10px 10px #282c34;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\nobject-fit: cover;`;\n\nexport const ImageWrapper = styled.div`\n  display: block;\n  height: 300px;\n`;\n\nexport const ContentWrapper = styled.div`\n  padding: 15px;\n  p:first-child {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Rating = styled.span`\n  padding: 5px;\n  background-color: ${({ rating }) => {\n    if (rating > 6) {\n      return '#6c3';\n    }\n    if (rating >= 4 && rating <= 6) {\n      return '#fc3';\n    }\n    return '#f00';\n  }};\n  border-radius: 10px;\n  color: ${({ rating }) => (rating >= 4 && rating <= 6 ? 'black' : 'white')};\n`;","import { useLocation } from 'react-router-dom';\n\nimport { Box } from 'utils/Box';\n\nimport {\n  StyledMovieCard,\n  Rating,\n  ContentWrapper,\n  ImageWrapper,\n  StyledImage,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Box\n        as=\"ul\"\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(5, 1fr)\"\n        gridGap=\"20px\"\n        gridAutoRows=\"auto\"\n      >\n        {movies.map(({ id, title, poster, vote_average }) => (\n          <li key={id}>\n            <StyledMovieCard to={`/movies/${id}`} state={{ from: location }}>\n              <ImageWrapper>\n                <StyledImage src={poster} alt={title} />\n              </ImageWrapper>\n              <ContentWrapper>\n                <p>\n                  <b>{title}</b>\n                </p>\n                <p>\n                  <b>Rating: </b>\n                  <Rating rating={vote_average.toFixed(2)}>\n                    {vote_average.toFixed(2)}\n                  </Rating>\n                </p>\n              </ContentWrapper>\n            </StyledMovieCard>\n          </li>\n        ))}\n      </Box>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTitle = styled.h1`\ntext-align: center;\n  margin-bottom: 30px;\n  font-size: 70px;\n  font-weight: 600;\n  color: #1e489c;\n  background-clip: text;\n  -webkit-background-clip: text;\n`;","import { useEffect, useState } from 'react';\n\nimport { getFetchTrending } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nimport { Box } from 'utils/Box';\nimport { StyledTitle } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchTrending = async () => {\n      const allDataMovies = await getFetchTrending();\n      const requiredDataMovies = allDataMovies.map(\n        ({ id, title, poster_path: poster, vote_average }) => ({\n          id,\n          title,\n          poster: 'https://image.tmdb.org/t/p/w500' + poster,\n          vote_average,\n        })\n      );\n      setMovies(requiredDataMovies);\n    };\n    fetchTrending();\n  }, []);\n\n  return (\n    <Box p=\"30px 0\">\n      <StyledTitle>Trending Today</StyledTitle>\n\n      {movies && <MoviesList movies={movies} />}\n    </Box>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '6f3a72a470b06bab99f8d69f54b4e2d3';\n\nexport const getFetchTrending = async () => {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchSearchMovies = async query => {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchMovieDetails = async movieId => {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieCast = async movieId => {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieReviews = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n"],"names":["StyledMovieCard","styled","Link","StyledImage","ImageWrapper","ContentWrapper","Rating","rating","MoviesList","movies","location","useLocation","Box","as","display","gridTemplateColumns","gridGap","gridAutoRows","map","id","title","poster","vote_average","to","state","from","src","alt","toFixed","StyledTitle","useState","setMovies","useEffect","fetchTrending","getFetchTrending","allDataMovies","requiredDataMovies","poster_path","p","axios","KEY","params","api_key","response","data","results","getFetchSearchMovies","query","include_adult","getFetchMovieDetails","movieId","getFetchMovieCast","getFetchMovieReviews"],"sourceRoot":""}