{"version":3,"file":"static/js/514.cf438452.chunk.js","mappings":"6RAEaA,EAAYC,EAAAA,GAAAA,GAAH,wHAOTC,EAAUD,EAAAA,GAAAA,EAAH,8C,SC0CpB,EA3CgB,WACd,IAAQE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC4BC,EAAAA,EAAAA,IAAqBN,GADjD,OACQO,EADR,OAGEH,EAAWG,EAAYC,SAHzB,4CADc,uBAAC,WAAD,wBAOdC,EACD,GAAE,CAACT,KAGF,8BACGG,EAAQO,OAAS,GAChB,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASC,QAAS,EAA5D,UACE,wBACGZ,EAAQa,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACX,UAACtB,EAAD,YACE,0BACE,mCADF,IACkBoB,MAElB,wBACE,uCAEF,SAAClB,EAAD,UAAUmB,KACV,0BACE,oCAAgB,IACf,IAAIE,KAAKD,GAAYE,mBAAmB,cAV7BrB,EADL,SAkBjB,uCAIP,C,4MC/CDsB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAgB,mCAAG,oGACPF,IAAM,sBAAuB,CAClDG,OAAQ,CACNC,QAASH,KAHiB,cACxBI,EADwB,yBAOvBA,EAASC,KAAKpB,SAPS,2CAAH,qDAUhBqB,EAAoB,mCAAG,WAAMC,GAAN,uFACXR,IAAM,gBAAiB,CAC5CG,OAAQ,CACNC,QAASH,EACTQ,eAAe,EACfD,MAAAA,KAL8B,cAC5BH,EAD4B,yBAS3BA,EAASC,KAAKpB,SATa,2CAAH,sDAYpBwB,EAAoB,mCAAG,WAAMC,GAAN,uFACXX,IAAM,UAAD,OAAWW,GAAW,CAChDR,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,sDAUpBM,EAAiB,mCAAG,WAAMD,GAAN,uFACRX,IAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBtB,EAAoB,mCAAG,WAAM2B,GAAN,uFACXX,IAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.li`\n  background-color: #9c9efc;\n  border-radius: 10px;\n  padding: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const Content = styled.p`\n  text-indent: 50px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getFetchMovieReviews } from 'services/api';\nimport { Box } from 'utils/Box';\n\nimport { Container, Content } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      const reviewsData = await getFetchMovieReviews(id);\n\n      setReviews(reviewsData.results);\n    }\n\n    fetchMovieReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" gridGap={3}>\n          <ul>\n            {reviews.map(({ id, author, content, created_at }) => (\n              <Container key={id}>\n                <p>\n                  <b>Author:</b> {author}\n                </p>\n                <p>\n                  <b>Comment:</b>\n                </p>\n                <Content>{content}</Content>\n                <p>\n                  <b>Created:</b>{' '}\n                  {new Date(created_at).toLocaleDateString('en-US')}\n                </p>\n              </Container>\n            ))}\n          </ul>\n        </Box>\n      ) : (\n        <p>No reviews</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '6f3a72a470b06bab99f8d69f54b4e2d3';\n\nexport const getFetchTrending = async () => {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchSearchMovies = async query => {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchMovieDetails = async movieId => {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieCast = async movieId => {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieReviews = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n"],"names":["Container","styled","Content","id","useParams","useState","reviews","setReviews","useEffect","getFetchMovieReviews","reviewsData","results","fetchMovieReviews","length","Box","as","display","flexDirection","gridGap","map","author","content","created_at","Date","toLocaleDateString","axios","KEY","getFetchTrending","params","api_key","response","data","getFetchSearchMovies","query","include_adult","getFetchMovieDetails","movieId","getFetchMovieCast"],"sourceRoot":""}