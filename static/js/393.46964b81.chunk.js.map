{"version":3,"file":"static/js/393.46964b81.chunk.js","mappings":"oSAGaA,EAAeC,EAAAA,GAAAA,OAAH,uaAoBZC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kfAwBVG,EAAeH,EAAAA,GAAAA,GAAH,gDAIZI,EAAgBJ,EAAAA,GAAAA,GAAH,gDAIbK,EAAcL,EAAAA,GAAAA,GAAH,gD,GAILA,EAAAA,GAAAA,IAAH,gD,kBCkChB,EA9EqB,WAAO,IAAD,IACjBM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAY7C,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC0BC,EAAAA,EAAAA,IAAqBV,GAD/C,OACQW,EADR,OAGEP,EAAgBO,GAHlB,4CADc,uBAAC,WAAD,wBAOdC,EACD,GAAE,CAACZ,KAGF,iCACE,UAACa,EAAA,EAAD,CAAKC,GAAG,UAAUC,EAAE,SAApB,WACE,SAAC,KAAD,CAAMC,GAAIX,EAAV,UACE,SAACZ,EAAD,CAAcwB,KAAK,SAAnB,uBAGDd,IACC,iCACE,UAACU,EAAA,EAAD,CAAKK,QAAQ,OAAOC,QAAS,EAAGC,GAAI,EAApC,WACE,SAACP,EAAA,EAAD,CAAKQ,UAAU,QAAQC,SAAS,IAAIC,WAAW,IAA/C,UACE,gBACEC,IACE,kCAAoCrB,EAAasB,YAEnDC,IAAKvB,EAAawB,MAClBC,MAAM,WAGV,UAACf,EAAA,EAAD,YACE,SAAChB,EAAD,UAAeM,EAAawB,SAC5B,SAAC7B,EAAD,wBACA,uBAAIK,EAAa0B,YACjB,SAAC9B,EAAD,sBACA,uBAAII,EAAa2B,OAAOC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,SACrD,0BACE,oCADF,KACgD,GAA5B9B,EAAa+B,cAAmBC,QAAQ,GAD5D,cAKJ,UAACtB,EAAA,EAAD,CACEK,QAAQ,OACRkB,cAAc,SACdC,WAAW,SACXC,GAAG,OAJL,WAME,SAACvC,EAAD,sCACA,UAACc,EAAA,EAAD,CAAKC,GAAG,KAAKI,QAAQ,OAAOC,QAAS,EAArC,WACE,yBACE,SAACxB,EAAD,CAAYqB,GAAG,OAAOT,MAAO,CAAEC,KAAMH,GAArC,qBAIF,yBACE,SAACV,EAAD,CAAYqB,GAAG,UAAUT,MAAO,CAAEC,KAAMH,GAAxC,oCAUZ,SAAC,EAAAkC,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,4MCzFDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAgB,mCAAG,oGACPF,IAAM,sBAAuB,CAClDG,OAAQ,CACNC,QAASH,KAHiB,cACxBI,EADwB,yBAOvBA,EAASC,KAAKC,SAPS,2CAAH,qDAUhBC,EAAoB,mCAAG,WAAMC,GAAN,uFACXT,IAAM,gBAAiB,CAC5CG,OAAQ,CACNC,QAASH,EACTS,eAAe,EACfD,MAAAA,KAL8B,cAC5BJ,EAD4B,yBAS3BA,EAASC,KAAKC,SATa,2CAAH,sDAYpBtC,EAAoB,mCAAG,WAAM0C,GAAN,uFACXX,IAAM,UAAD,OAAWW,GAAW,CAChDR,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,sDAUpBM,EAAiB,mCAAG,WAAMD,GAAN,uFACRX,IAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHkB,cACzBI,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBO,EAAoB,mCAAG,WAAMF,GAAN,uFACXX,IAAM,UAAD,OAAWW,EAAX,YAA8B,CACxDR,OAAQ,CACNC,QAASH,KAHqB,cAC5BI,EAD4B,yBAO3BA,EAASC,MAPkB,2CAAH,qD","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.js","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  width: 90px;\n  text-decoration: none;\n  border: none;\n  border-radius: 10px;\n  background-color: #9c9efc;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n    background-color: #1e489c;\n    color: white;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 110px;\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  cursor: pointer;\n  color: black;\n  background-color: #9c9efc;\n  border-radius: 10px;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n    background-color: #1e489c;\n    color: white;\n  }\n  &.active {\n    outline: 2px solid blue;\n    background-color: #1e489c;\n    color: white;\n  }\n`;\n\nexport const LargeCaption = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const MiddleCaption = styled.h3`\n  margin-bottom: 15px;\n`;\n\nexport const MiniCaption = styled.h4`\n  margin-bottom: 10px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 10px;\n`;","import { Suspense, useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { Box } from 'utils/Box';\n\nimport {\n  StyledButton,\n  StyledLink,\n  MiniCaption,\n  MiddleCaption,\n  LargeCaption,\n} from './MovieDetailsPage.styled';\n\nimport { getFetchMovieDetails } from 'services/api';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      const movieData = await getFetchMovieDetails(id);\n\n      setMovieDetails(movieData);\n    }\n\n    fetchMovieDetails();\n  }, [id]);\n\n  return (\n    <>\n      <Box as=\"section\" p=\"30px 0\">\n        <Link to={backLinkHref}>\n          <StyledButton type=\"button\">Go back</StyledButton>\n        </Link>\n\n        {movieDetails && (\n          <>\n            <Box display=\"flex\" gridGap={4} mb={4}>\n              <Box flexBasis=\"300px\" flexGrow=\"0\" flexShrink=\"0\">\n                <img\n                  src={\n                    'https://image.tmdb.org/t/p/w500' + movieDetails.poster_path\n                  }\n                  alt={movieDetails.title}\n                  width=\"300\"\n                />\n              </Box>\n              <Box>\n                <LargeCaption>{movieDetails.title}</LargeCaption>\n                <MiddleCaption>Overview</MiddleCaption>\n                <p>{movieDetails.overview}</p>\n                <MiniCaption>Genres</MiniCaption>\n                <p>{movieDetails.genres.map(({ name }) => name).join(', ')}</p>\n                <p>\n                  <b>Raiting:</b> {(movieDetails.vote_average * 10).toFixed(2)}%\n                </p>\n              </Box>\n            </Box>\n            <Box\n              display=\"flex\"\n              flexDirection=\"column\"\n              alignItems=\"center\"\n              mt=\"20px\"\n            >\n              <MiniCaption>Additional information</MiniCaption>\n              <Box as=\"ul\" display=\"flex\" gridGap={3}>\n                <li>\n                  <StyledLink to=\"cast\" state={{ from: backLinkHref }}>\n                    Cast\n                  </StyledLink>\n                </li>\n                <li>\n                  <StyledLink to=\"reviews\" state={{ from: backLinkHref }}>\n                    Reviews\n                  </StyledLink>\n                </li>\n              </Box>\n            </Box>\n          </>\n        )}\n      </Box>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '6f3a72a470b06bab99f8d69f54b4e2d3';\n\nexport const getFetchTrending = async () => {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchSearchMovies = async query => {\n  const response = await axios('/search/movie', {\n    params: {\n      api_key: KEY,\n      include_adult: false,\n      query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const getFetchMovieDetails = async movieId => {\n  const response = await axios(`/movie/${movieId}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieCast = async movieId => {\n  const response = await axios(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getFetchMovieReviews = async movieId => {\n  const response = await axios(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n\n  return response.data;\n};\n"],"names":["StyledButton","styled","StyledLink","NavLink","LargeCaption","MiddleCaption","MiniCaption","id","useParams","useState","movieDetails","setMovieDetails","backLinkHref","useLocation","state","from","useEffect","getFetchMovieDetails","movieData","fetchMovieDetails","Box","as","p","to","type","display","gridGap","mb","flexBasis","flexGrow","flexShrink","src","poster_path","alt","title","width","overview","genres","map","name","join","vote_average","toFixed","flexDirection","alignItems","mt","Suspense","fallback","axios","KEY","getFetchTrending","params","api_key","response","data","results","getFetchSearchMovies","query","include_adult","movieId","getFetchMovieCast","getFetchMovieReviews"],"sourceRoot":""}